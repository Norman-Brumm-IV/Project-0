package tools;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Locale;

import com.github.javafaker.Faker;

import core.ConnectionDriver;


// This method should never be called, it was written simply to add data into my database tables
public class FillTables {
	public static void main(String[] args) throws SQLException {
		
		Connection conn = ConnectionDriver.getConnection();
		Faker faker = new Faker(new Locale("en-US"));
		String name;
		String[] ssn = new String[50];
		
		
		String sql4customers = "INSERT INTO customers VALUES ( ? , ? )";
		String sql4accounts = "INSERT INTO accounts (amount) VALUES ( ? )";
		String sql4userAccounts = "INSERT INTO useraccounts (ssn ,account) VALUES ( ? , ? )";
		
		PreparedStatement cusPstmt = conn.prepareStatement(sql4customers);
		PreparedStatement accPstmt = conn.prepareStatement(sql4accounts);
		PreparedStatement uacPstmt = conn.prepareStatement(sql4userAccounts);
		
		
		/* this for loop will:
		 * 		1. create a user
		 * 		2. create a number of accounts for that user
		 * 		3. associate those accounts with that user
		 * 		4. 12% (arbitrary number) chance to associate that account with another user as well
		 */

		for(int i=0;i<50;i++) {
		/*
		 * -------------------------------------------------------------------------
		 * this section for adding data to the customers table 
		 * ------------------------------------------------------------------------
		 */
		name  = faker.funnyName().name();
		ssn[i] = SSNbuilder();
		cusPstmt.setString(1, name);
		cusPstmt.setString(2, ssn[i]);
		
		cusPstmt.execute();
		
		/*
		 * -------------------------------------------------------------------------
		 * this section for adding values to the accounts table. 
		 * INSERT INTO accounts (amount) VALUES ( ? )
		 * Adding a random number of loops so that there is a chance for more than 
		 * just a single account per user. but the statement on the outside of the
		 * loop is to make sure there is at least one.
		 * ------------------------------------------------------------------------
		 */
		int rndm = (int)Math.random()*10; //0-9
		double rndmDouble = Math.random() * 5000; //0-4999 
				
		accPstmt.setDouble(1, rndmDouble);
		accPstmt.execute();
		
		// Account with random amount of money created. Time to assign it to the last person created 
		// INSERT INTO useraccounts (ssn ,account) VALUES ( ? , ? )
		uacPstmt.setString(1, ssn);
		
				
		for(int j=5;j<rndm;j++) {
			rndmDouble = Math.random() * 5000;
			
			accPstmt.setDouble(1, rndmDouble);
			accPstmt.execute();

			
			
			
			/*
			 * -------------------------------------------------------------------------
			 * this section for associating users and their accounts 
			 * ------------------------------------------------------------------------
			 */

		}
		
		
		
		}
		
		
		for(int i=0;i<99;i++) {
			cusPstmt.setDouble(1, (Math.random() * 5000));
			
			
		}
		

		ArrayList<String> accounts = new ArrayList<String>();
		accounts.add("200");
		ResultSet rs = cusPstmt.executeQuery();
        
		while(rs.next())
			accounts.add(rs.getString("name"));
	}

	private static String SSNbuilder() {
		int first, last;
		first = (int) (Math.random()*850)+100; // 100-949
		last = (int) (Math.random()*8500)+1000; // 1000-9499

		return first + "00" + last;
	}

}
