package sqlCommands;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class SQLInsert {
	/**	Creates a new client. Returns a 201 status code if successful, and a 400 if not enough info or the wrong type. 409 if the user already exists**/
	public static String newCustomer(Connection conn, String ssn, String custName) throws SQLException {
		ResultSet rs = SQLGet.getInfoWhere(conn, "customers", "ssn", ssn);
		if(rs.next())
			return "409";
		
		String sql = "INSERT INTO customers (ssn, name) VALUES (?, ?);";
		PreparedStatement pstmt = conn.prepareStatement(sql);
		
		pstmt.setString(1, ssn);
		pstmt.setString(2, custName);
		pstmt.execute();
		
		return "201";
	}
	/**	Creates a new client. Returns the account number if successful
	 * @param conn - Connection to the database 
	 * @throws SQLException if the table doesnt exist or was changed**/
	public static int newAccount(Connection conn) throws SQLException {
		String sql = "INSERT INTO accounts (amount) VALUES (-1)";
		PreparedStatement pstmt = conn.prepareStatement(sql); // TODO remember how to do the SQL WITHOUUT PreparedStatement
		pstmt.execute();
		
		ResultSet rs = SQLGet.getInfoWhere(conn, "accounts", "amount", "-1");
		rs.next();
		
		int accountNumber = rs.getInt("account");
		SQLPatch.updateValue(conn, "accounts", "amount", "0", "account", String.valueOf(accountNumber));
		
		return accountNumber;
	}
	/** 
	 * Assigns a user to an account
	 * @param conn - Connection to the database
	 * @param ssn - unique identifier from the customers table
	 * @param accountNumber - unique identifier from the accounts table
	 * @return 
	 * **/
	public static String[] assign(Connection conn, String ssn, String accountNumber) throws SQLException {
		ResultSet rs = SQLGet.getInfoWhere(conn, "customers", "ssn", ssn);
		if(!rs.next()) {
			
		}
		
		
		String sql = "INSERT INTO useraccounts (ssn, account) VALUES (?, ?)";
		PreparedStatement pstmt = conn.prepareStatement(sql);
		// TODO Auto-generated method stub
		return null;
	}

}
