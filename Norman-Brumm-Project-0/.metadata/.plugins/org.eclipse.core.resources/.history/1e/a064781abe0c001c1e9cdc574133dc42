package patch;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**	Withdraw/deposit given amount (Body: {"deposit":500} or {"withdraw":250} return 404 if no account or client exists return 422 if insufficient funds **/
public class PatchClientsVarAccountsVar {
	/**	Withdraw/deposit given amount (Body: {"deposit":500} or {"withdraw":250} return 404 if no account or client exists return 422 if insufficient funds 
	 * @throws SQLException **/
	public static String[] patCliVarAccVar(String args, Connection conn) throws SQLException {
		String[] accounts = new String[2];
		String[] fullString = args.split("<>");
		double amountInAccount = -1;
        // get the amount from the account from the specific client. Account is unique, so only 1 result
		String sql = "SELECT * FROM useraccounts INNER JOIN (accounts) USING (account) WHERE ssn = ? AND account = ?";
		PreparedStatement pstmt = conn.prepareStatement(sql);
		
		if(fullString.length<4)
			return new String[] {"404"};

		pstmt.setString(1, fullString[0]);
		pstmt.setString(2, fullString[1]);

		accounts[0] = "200";
		ResultSet rs = pstmt.executeQuery();
		
		//leaving it in a while loop just to make sure that it has a next and wont error
		while(rs.next())
			amountInAccount=rs.getDouble("amount");
		System.out.println("amount in the account: " + amountInAccount);

		
		if(amountInAccount<0)
			return new String[] {"404"};
		
		double amountChangedBy = Double.parseDouble(fullString[3]);
		
		// either withdrawn or deposited, the amount should be positive according to the endpoint. this just makes sure of that.
		if(amountChangedBy<0)
			return new String[] {"404"};
		
		switch(fullString[2].toLowerCase()) {
		case "deposit":
			// not changing the amount in the database, just the local variable
			amountInAccount = amountInAccount + amountChangedBy;
			break;
		case "withdraw":
			// updating the amount in the account, then checking if its negative or not
			// not changing the amount in the database, just the local variable
			amountInAccount = amountInAccount - amountChangedBy;
		}
		
		//if changing the amount would send you into the negatives
		if(amountInAccount<0)
			return new String[] {"422"};
		
		System.out.println("amount in the account: " + amountInAccount);

		sql = "UPDATE accounts SET amount=? WHERE account=?";
		pstmt.setDouble(1, amountInAccount);
		pstmt.setString(2, fullString[1]);
		
		
		System.out.println("amount in the account: " + amountInAccount);
		pstmt.executeQuery();

		return new String[] {"200"};
	}
}
